{"ast":null,"code":"var _jsxFileName = \"/Users/cx/Desktop/NYU/Prep_Interview/Frontend/dropdown-menu/src/components/dropdown/Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Dropdown.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropdown = options => {\n  _s();\n\n  console.log(options, '***');\n  /* mini version = redux, fn comopnent feature */\n\n  const [processed_opts, setProcessed_opts] = useState();\n  const [expanded, setExpanded] = useState(false);\n  const [selections, setSelections] = useState([]);\n  useEffect(() => {\n    /* map || reduce fn to add a checked field for multiple selections */\n    let tmp_data = options.map(item => {\n      let tmp_obj = item;\n      tmp_obj.isChecked = false;\n      return tmp_obj;\n    });\n    setProcessed_opts(tmp_data);\n  }, []);\n\n  const toggleExpanded = () => {\n    if (!expanded) {\n      setExpanded(true);\n    } else {\n      setExpanded(false);\n    }\n  };\n\n  console.log(processed_opts);\n\n  const handleChange = event => {\n    if (event.target.checked) {\n      /* set myfilter field isChecked true */\n      let tmpArr = [...processed_opts];\n      tmpArr.isChecked = event.target.checked;\n      setProcessed_opts(tmpArr);\n      return setSelections([...selections, event.target.name]);\n    }\n\n    const filtered = selections.filter(name => name !== event.target.name);\n    return setSelections(filtered);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main__div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchbar__div\",\n      onClick: toggleExpanded,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `font - semibold cursor - pointer ${expanded ? \"up-arrow\" : \"down-arrow\"} `,\n        children: selections.length ? selections.map((name, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [i ? \", \" : null, \" \", name]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this)) : \"None selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" expanded__div\",\n      children: processed_opts && processed_opts.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block__label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: opt.value,\n          value: opt.value,\n          data: true,\n          onChange: handleChange,\n          className: \"m-3 cursor-pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }, this), opt.value]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dropdown, \"T2gOWx/Ct75ufAqEwV717+uSPSA=\");\n\n_c = Dropdown;\n\nconst DropDownContainer = ({ ...options\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-screen flex justify-center items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 h-16  text-black-100 flex items-center justify-center text-xl\",\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = DropDownContainer;\nexport default DropDownContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Dropdown\");\n$RefreshReg$(_c2, \"DropDownContainer\");","map":{"version":3,"sources":["/Users/cx/Desktop/NYU/Prep_Interview/Frontend/dropdown-menu/src/components/dropdown/Dropdown.js"],"names":["React","useEffect","useState","Dropdown","options","console","log","processed_opts","setProcessed_opts","expanded","setExpanded","selections","setSelections","tmp_data","map","item","tmp_obj","isChecked","toggleExpanded","handleChange","event","target","checked","tmpArr","name","filtered","filter","length","i","opt","idx","value","DropDownContainer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Dropdown.css\";\n\nconst Dropdown = (options) => {\n    console.log(options, '***')\n    /* mini version = redux, fn comopnent feature */\n    const [processed_opts, setProcessed_opts] = useState();\n    const [expanded, setExpanded] = useState(false);\n    const [selections, setSelections] = useState([]);\n\n\n\n\n    useEffect(() => {\n        /* map || reduce fn to add a checked field for multiple selections */\n        let tmp_data = options.map((item) => {\n            let tmp_obj = item;\n            tmp_obj.isChecked = false;\n            return tmp_obj;\n        });\n        setProcessed_opts(tmp_data);\n    }, []);\n\n    const toggleExpanded = () => {\n        if (!expanded) {\n            setExpanded(true);\n        } else {\n            setExpanded(false);\n        }\n    };\n    console.log(processed_opts)\n    const handleChange = (event) => {\n        if (event.target.checked) {\n\n            /* set myfilter field isChecked true */\n\n            let tmpArr = [...processed_opts]\n            tmpArr.isChecked = event.target.checked\n            setProcessed_opts(tmpArr)\n\n\n\n            return setSelections([...selections, event.target.name]);\n        }\n        const filtered = selections.filter((name) => name !== event.target.name);\n        return setSelections(filtered);\n    };\n\n    return (\n        <main className=\"main__div\">\n            <div className=\"searchbar__div\" onClick={toggleExpanded}>\n                <div\n                    className={`font - semibold cursor - pointer ${expanded ? \"up-arrow\" : \"down-arrow\"\n                        } `}\n                >\n                    {selections.length\n                        ? selections.map((name, i) => (\n                            <span key={i}>\n\n                                {i ? \", \" : null} {name}\n                            </span>\n                        ))\n                        : \"None selected\"}\n                </div>\n            </div >\n            {expanded && (\n                <div className=\" expanded__div\">\n                    {processed_opts &&\n                        processed_opts.map((opt, idx) => (\n                            <label className=\"block__label\" key={idx}>\n                                <input\n                                    type=\"checkbox\"\n                                    name={opt.value}\n                                    value={opt.value}\n                                    data\n                                    onChange={handleChange}\n                                    className=\"m-3 cursor-pointer\"\n                                />\n                                {opt.value}\n                            </label>\n                        ))}\n                </div>\n            )}\n        </main >\n    );\n};\n\nconst DropDownContainer = ({...options}) => {\n    return (\n        <div className=\"w-full h-screen flex justify-center items-center\">\n            <div className=\"w-1/2 h-16  text-black-100 flex items-center justify-center text-xl\">\n                <Dropdown options={options} />\n            </div>\n        </div>\n    );\n};\n\nexport default DropDownContainer;\n"]},"metadata":{},"sourceType":"module"}