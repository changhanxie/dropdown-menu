{"ast":null,"code":"var _jsxFileName = \"/Users/cx/Desktop/NYU/Prep_Interview/Frontend/dropdown-menu/src/components/dropdown/Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport { computeHeadingLevel } from \"@testing-library/react\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Dropdown.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropdown = ({ ...options\n}) => {\n  _s();\n\n  console.log(options.options.options, '***');\n  /* mini version = redux, fn comopnent feature */\n\n  const [processed_opts, setProcessed_opts] = useState();\n  const [expanded, setExpanded] = useState(false);\n  const [selections, setSelections] = useState([]);\n  useEffect(() => {\n    /* map || reduce fn to add a checked field for multiple selections */\n    let tmp_data = options.options.options.map(item => {\n      let tmp_obj = item;\n      tmp_obj.isChecked = false;\n      return tmp_obj;\n    });\n    setSelections(tmp_data);\n    setProcessed_opts(tmp_data);\n  }, []);\n\n  const toggleExpanded = () => {\n    if (!expanded) {\n      setExpanded(true);\n    } else {\n      setExpanded(false);\n    }\n  };\n\n  const handleChange = e => {\n    if (e.target.checked) {\n      /* set myfilter field isChecked true */\n      let tmpArr = [...processed_opts];\n      tmpArr.isChecked = e.target.checked;\n      setProcessed_opts(tmpArr);\n      setSelections([tmpArr, e.target.name]);\n    }\n\n    console.log(selections, e.target.name);\n    const filtered = selections.filter(name => name !== e.target.name);\n    let tmp_data = [...processed_opts];\n    console.log(filtered, 'filtered____', e.target.dataset.rowid);\n    tmp_data[e.target.dataset.rowid].isChecked = e.target.checked;\n    setProcessed_opts(tmp_data);\n    setSelections(filtered);\n  };\n\n  console.log(processed_opts);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main__div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchbar__div\",\n      onClick: toggleExpanded,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `font - semibold cursor - pointer ${expanded ? \"up-arrow\" : \"down-arrow\"} `,\n        children: selections.length ? selections.filter(item => item.isChecked == true).map((name, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [i ? \", \" : null, \" \", name.value]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)) : \"None selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" expanded__div\",\n      children: processed_opts && processed_opts.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block__label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          \"data-rowid\": idx,\n          type: \"checkbox\",\n          name: opt.value,\n          value: opt.value,\n          onChange: e => handleChange(e),\n          className: \"m-3 cursor-pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }, this), opt.value]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dropdown, \"T2gOWx/Ct75ufAqEwV717+uSPSA=\");\n\n_c = Dropdown;\n\nconst DropDownContainer = ({ ...options\n}) => {\n  console.log(options, '$$$$$$');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-screen flex justify-center items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 h-16  text-black-100 flex items-center justify-center text-xl\",\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = DropDownContainer;\nexport default DropDownContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Dropdown\");\n$RefreshReg$(_c2, \"DropDownContainer\");","map":{"version":3,"sources":["/Users/cx/Desktop/NYU/Prep_Interview/Frontend/dropdown-menu/src/components/dropdown/Dropdown.js"],"names":["computeHeadingLevel","React","useEffect","useState","Dropdown","options","console","log","processed_opts","setProcessed_opts","expanded","setExpanded","selections","setSelections","tmp_data","map","item","tmp_obj","isChecked","toggleExpanded","handleChange","e","target","checked","tmpArr","name","filtered","filter","dataset","rowid","length","i","value","opt","idx","DropDownContainer"],"mappings":"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","sourcesContent":["import { computeHeadingLevel } from \"@testing-library/react\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Dropdown.css\";\n\nconst Dropdown = ({ ...options }) => {\n    console.log(options.options.options, '***')\n    /* mini version = redux, fn comopnent feature */\n    const [processed_opts, setProcessed_opts] = useState();\n    const [expanded, setExpanded] = useState(false);\n    const [selections, setSelections] = useState([]);\n\n\n\n\n    useEffect(() => {\n        /* map || reduce fn to add a checked field for multiple selections */\n        let tmp_data = options.options.options.map((item) => {\n            let tmp_obj = item;\n            tmp_obj.isChecked = false;\n            return tmp_obj;\n        });\n        setSelections(tmp_data)\n        setProcessed_opts(tmp_data);\n    }, []);\n\n    const toggleExpanded = () => {\n        if (!expanded) {\n            setExpanded(true);\n        } else {\n            setExpanded(false);\n        }\n    };\n    const handleChange = (e) => {\n        if (e.target.checked) {\n            /* set myfilter field isChecked true */\n            let tmpArr = [...processed_opts]\n            tmpArr.isChecked = e.target.checked\n            setProcessed_opts(tmpArr)\n\n\n\n            setSelections([tmpArr, e.target.name]);\n        }\n        console.log(selections, e.target.name)\n        const filtered = selections.filter((name) => name !== e.target.name);\n        let tmp_data = [...processed_opts]\n        console.log(filtered, 'filtered____', e.target.dataset.rowid)\n        tmp_data[e.target.dataset.rowid].isChecked = e.target.checked\n        setProcessed_opts(tmp_data)\n        setSelections(filtered);\n    };\n    console.log(processed_opts)\n\n    return (\n        <main className=\"main__div\">\n            <div className=\"searchbar__div\" onClick={toggleExpanded}>\n                <div\n                    className={`font - semibold cursor - pointer ${expanded ? \"up-arrow\" : \"down-arrow\"\n                        } `}\n                >\n                    {selections.length\n                        ? selections.filter(item => item.isChecked == true).map((name, i) => (\n                            <span key={i}>\n\n                                {i ? \", \" : null} {name.value}\n                            </span>\n                        ))\n                        : \"None selected\"}\n                </div>\n            </div >\n            {expanded && (\n                <div className=\" expanded__div\">\n                    {processed_opts &&\n                        processed_opts.map((opt, idx) => (\n                            <label className=\"block__label\" key={idx}>\n                                <input\n                                    data-rowid={idx}\n                                    type=\"checkbox\"\n                                    name={opt.value}\n                                    value={opt.value}\n                                    onChange={e => handleChange(e)}\n                                    className=\"m-3 cursor-pointer\"\n                                />\n                                {opt.value}\n                            </label>\n                        ))}\n                </div>\n            )}\n        </main >\n    );\n};\n\nconst DropDownContainer = ({ ...options }) => {\n    console.log(options, '$$$$$$')\n    return (\n        <div className=\"w-full h-screen flex justify-center items-center\">\n            <div className=\"w-1/2 h-16  text-black-100 flex items-center justify-center text-xl\">\n                <Dropdown options={options} />\n            </div>\n        </div>\n    );\n};\n\nexport default DropDownContainer;\n"]},"metadata":{},"sourceType":"module"}