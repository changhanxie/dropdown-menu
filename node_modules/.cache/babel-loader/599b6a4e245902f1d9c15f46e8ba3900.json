{"ast":null,"code":"var _jsxFileName = \"/Users/cx/Desktop/NYU/Prep_Interview/Frontend/dropdown-menu/src/components/dropdown/Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport { computeHeadingLevel } from \"@testing-library/react\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Dropdown.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropdown = ({ ...options\n}) => {\n  _s();\n\n  console.log(options.options.options, '***');\n  /* mini version = redux, fn comopnent feature */\n\n  const [processed_opts, setProcessed_opts] = useState();\n  const [expanded, setExpanded] = useState(false);\n  useEffect(() => {\n    /* map || reduce fn to add a checked field for multiple processed_opts */\n    let tmp_data = options.options.options.map(item => {\n      let tmp_obj = item;\n      tmp_obj.isChecked = false;\n      return tmp_obj;\n    });\n    setProcessed_opts(tmp_data);\n    setProcessed_opts(tmp_data);\n  }, []);\n\n  const toggleExpanded = () => {\n    if (!expanded) {\n      setExpanded(true);\n    } else {\n      setExpanded(false);\n    }\n  };\n\n  const handleChange = e => {\n    const filtered = processed_opts.filter(name => name !== e.target.name);\n    let tmp_data = [...processed_opts];\n    tmp_data[e.target.dataset.rowid].isChecked = e.target.checked;\n    setProcessed_opts(tmp_data);\n    setProcessed_opts(filtered);\n  };\n\n  console.log(processed_opts);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main__div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchbar__div\",\n      onClick: toggleExpanded,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `font - semibold cursor - pointer ${expanded ? \"up-arrow\" : \"down-arrow\"} `,\n        children: processed_opts ? processed_opts.filter(item => item.isChecked == true).map((name, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [i ? \", \" : null, \" \", name.value]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this)) : \"None selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" expanded__div\",\n      children: processed_opts && processed_opts.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n        value: opt.value,\n        className: \"block__label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          \"data-rowid\": idx,\n          type: \"checkbox\",\n          name: opt.value,\n          checked: opt.isChecked,\n          onChange: e => handleChange(e),\n          className: \"m-3 cursor-pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 33\n        }, this), opt.value]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dropdown, \"xaILZ7Nc/mEwRbXaZ1ktonIxRXQ=\");\n\n_c = Dropdown;\n\nconst DropDownContainer = ({ ...options\n}) => {\n  console.log(options, '$$$$$$');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-screen flex justify-center items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 h-16  text-black-100 flex items-center justify-center text-xl\",\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = DropDownContainer;\nexport default DropDownContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Dropdown\");\n$RefreshReg$(_c2, \"DropDownContainer\");","map":{"version":3,"sources":["/Users/cx/Desktop/NYU/Prep_Interview/Frontend/dropdown-menu/src/components/dropdown/Dropdown.js"],"names":["computeHeadingLevel","React","useEffect","useState","Dropdown","options","console","log","processed_opts","setProcessed_opts","expanded","setExpanded","tmp_data","map","item","tmp_obj","isChecked","toggleExpanded","handleChange","e","filtered","filter","name","target","dataset","rowid","checked","i","value","opt","idx","DropDownContainer"],"mappings":"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","sourcesContent":["import { computeHeadingLevel } from \"@testing-library/react\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Dropdown.css\";\n\nconst Dropdown = ({ ...options }) => {\n    console.log(options.options.options, '***')\n    /* mini version = redux, fn comopnent feature */\n    const [processed_opts, setProcessed_opts] = useState();\n    const [expanded, setExpanded] = useState(false);\n\n\n\n\n    useEffect(() => {\n        /* map || reduce fn to add a checked field for multiple processed_opts */\n        let tmp_data = options.options.options.map((item) => {\n            let tmp_obj = item;\n            tmp_obj.isChecked = false;\n            return tmp_obj;\n        });\n        setProcessed_opts(tmp_data)\n        setProcessed_opts(tmp_data);\n    }, []);\n\n    const toggleExpanded = () => {\n        if (!expanded) {\n            setExpanded(true);\n        } else {\n            setExpanded(false);\n        }\n    };\n    const handleChange = (e) => {\n\n        const filtered = processed_opts.filter((name) => name !== e.target.name);\n        let tmp_data = [...processed_opts]\n        tmp_data[e.target.dataset.rowid].isChecked = e.target.checked\n        setProcessed_opts(tmp_data)\n        setProcessed_opts(filtered);\n    };\n    console.log(processed_opts)\n\n    return (\n        <main className=\"main__div\">\n            <div className=\"searchbar__div\" onClick={toggleExpanded}>\n                <div\n                    className={`font - semibold cursor - pointer ${expanded ? \"up-arrow\" : \"down-arrow\"\n                        } `}\n                >\n                    {processed_opts\n                        ? processed_opts.filter(item => item.isChecked == true).map((name, i) => (\n                            <span key={i}>\n\n                                {i ? \", \" : null} {name.value}\n                            </span>\n                        ))\n                        : \"None selected\"}\n                </div>\n            </div >\n            {expanded && (\n                <div className=\" expanded__div\">\n                    {processed_opts &&\n                        processed_opts.map((opt, idx) => (\n                            <label\n                                value={opt.value}\n\n                                className=\"block__label\" key={idx}>\n                                <input\n                                    data-rowid={idx}\n                                    type=\"checkbox\"\n                                    name={opt.value}\n                                    checked={opt.isChecked}\n                                    onChange={e => handleChange(e)}\n                                    className=\"m-3 cursor-pointer\"\n                                />\n                                {opt.value}\n                            </label>\n                        ))}\n                </div>\n            )}\n        </main >\n    );\n};\n\nconst DropDownContainer = ({ ...options }) => {\n    console.log(options, '$$$$$$')\n    return (\n        <div className=\"w-full h-screen flex justify-center items-center\">\n            <div className=\"w-1/2 h-16  text-black-100 flex items-center justify-center text-xl\">\n                <Dropdown options={options} />\n            </div>\n        </div>\n    );\n};\n\nexport default DropDownContainer;\n"]},"metadata":{},"sourceType":"module"}