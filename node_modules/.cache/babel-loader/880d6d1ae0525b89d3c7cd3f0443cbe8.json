{"ast":null,"code":"var _jsxFileName = \"/Users/cx/Desktop/NYU/Prep_Interview/Frontend/dropdown-menu/src/components/dropdown/Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Dropdown.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropdown = () => {\n  _s();\n\n  /* mini version = redux, fn comopnent feature */\n  const [options, setOptions] = useState();\n  const [expanded, setExpanded] = useState(false);\n  const [selections, setSelections] = useState([]);\n  useEffect(() => {\n    /* map || reduce fn to add a checked field for multiple selections */\n    let tmp_data = options.map(item => {\n      let tmp_obj = item;\n      tmp_obj.isChecked = false;\n      return tmp_obj;\n    });\n    setOptions(tmp_data);\n  }, []);\n\n  const toggleExpanded = () => {\n    if (!expanded) {\n      setExpanded(true);\n    } else {\n      setExpanded(false);\n    }\n  };\n\n  const handleChange = event => {\n    if (event.target.checked) {\n      return setSelections([...selections, event.target.name]);\n    }\n\n    const filtered = selections.filter(name => name !== event.target.name);\n    return setSelections(filtered);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main__div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: toggleExpanded,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `font - semibold cursor - pointer ${expanded ? \"up-arrow\" : \"down-arrow\"} `,\n        children: selections.length ? selections.map((name, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [i ? \", \" : null, name]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this)) : \"None selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-gray-200 border border-solid\",\n      children: options && options.map(opt => /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"one\",\n        className: \"block\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: opt,\n          value: opt.value,\n          onChange: handleChange,\n          className: \"m-3 cursor-pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), opt.value]\n      }, opt, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dropdown, \"pHviQl3pLhy7OmrD4z2GFZtOzeY=\");\n\n_c = Dropdown;\n\nconst DropDownContainer = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-screen flex justify-center items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 h-16  text-black-100 flex items-center justify-center text-xl\",\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = DropDownContainer;\nexport default DropDownContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Dropdown\");\n$RefreshReg$(_c2, \"DropDownContainer\");","map":{"version":3,"sources":["/Users/cx/Desktop/NYU/Prep_Interview/Frontend/dropdown-menu/src/components/dropdown/Dropdown.js"],"names":["React","useEffect","useState","Dropdown","options","setOptions","expanded","setExpanded","selections","setSelections","tmp_data","map","item","tmp_obj","isChecked","toggleExpanded","handleChange","event","target","checked","name","filtered","filter","length","i","opt","value","DropDownContainer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Dropdown.css\";\n\n\nconst Dropdown = () => {\n    /* mini version = redux, fn comopnent feature */\n    const [options, setOptions] = useState()\n    const [expanded, setExpanded] = useState(false);\n    const [selections, setSelections] = useState([]);\n\n\n    useEffect(() => {\n        /* map || reduce fn to add a checked field for multiple selections */\n        let tmp_data = options.map(item => {\n            let tmp_obj = item\n            tmp_obj.isChecked = false\n            return tmp_obj\n        })\n        setOptions(tmp_data)\n    }, [])\n\n\n\n    const toggleExpanded = () => {\n        if (!expanded) {\n            setExpanded(true);\n        } else {\n            setExpanded(false);\n        }\n    };\n\n    const handleChange = event => {\n        if (event.target.checked) {\n            return setSelections([...selections, event.target.name]);\n        }\n        const filtered = selections.filter(name => name !== event.target.name);\n        return setSelections(filtered);\n    };\n\n\n    return (\n\n        <main className=\"main__div\">\n            <div onClick={toggleExpanded}>\n                <div\n                    className={`font - semibold cursor - pointer ${expanded ? \"up-arrow\" : \"down-arrow\"\n                        } `}\n                >\n                    {selections.length\n                        ? selections.map((name, i) => (\n                            <span key={i}>\n                                {i ? \", \" : null}\n                                {name}\n                            </span>\n                        ))\n                        : \"None selected\"}\n                </div>\n            </div>\n            {expanded && (\n                <div className=\"border-gray-200 border border-solid\">\n                    {options && options.map(opt => (\n                        <label htmlFor=\"one\" className=\"block\" key={opt}>\n                            <input\n                                type=\"checkbox\"\n                                name={opt}\n                                value={opt.value}\n                                onChange={handleChange}\n                                className=\"m-3 cursor-pointer\"\n                            />\n                            {opt.value}\n                        </label>\n                    ))}\n                </div>\n            )}\n        </main>\n    );\n};\n\nconst DropDownContainer = () => {\n    return (\n        <div className=\"w-full h-screen flex justify-center items-center\">\n            <div className=\"w-1/2 h-16  text-black-100 flex items-center justify-center text-xl\">\n                <Dropdown />\n            </div>\n        </div>\n    );\n};\n\nexport default DropDownContainer;\n"]},"metadata":{},"sourceType":"module"}