{"ast":null,"code":"var _jsxFileName = \"/Users/cx/Desktop/NYU/Prep_Interview/Frontend/dropdown-menu/src/components/dropdown/Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Dropdown.css\";\nimport options from '../options/Options';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropdown = () => {\n  _s();\n\n  /* mini version = redux, fn comopnent feature */\n  const [processed_opts, setProcessed_opts] = useState();\n  const [expanded, setExpanded] = useState(false);\n  const [selections, setSelections] = useState([]);\n  useEffect(() => {\n    /* map || reduce fn to add a checked field for multiple selections */\n    let tmp_data = options.map(item => {\n      let tmp_obj = item;\n      tmp_obj.isChecked = false;\n      return tmp_obj;\n    });\n    setProcessed_opts(tmp_data);\n  }, []);\n\n  const toggleExpanded = () => {\n    if (!expanded) {\n      setExpanded(true);\n    } else {\n      setExpanded(false);\n    }\n  };\n\n  const handleChange = event => {\n    if (event.target.checked) {\n      return setSelections([...selections, event.target.name]);\n    }\n\n    const filtered = selections.filter(name => name !== event.target.name);\n    return setSelections(filtered);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main__div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchbar__div\",\n      onClick: toggleExpanded,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `font - semibold cursor - pointer ${expanded ? \"up-arrow\" : \"down-arrow\"} `,\n        children: [selections.length ? selections.map((name, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", i ? \", \" : null, \" \", name, \" \"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 43\n        }, this)) : \"None selected\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), \" \", expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-gray-200 border border-solid expanded__labels\",\n      children: [\" \", processed_opts && processed_opts.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"one\",\n        className: \"block\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: opt.value,\n          value: opt.value,\n          onChange: handleChange,\n          className: \"m-3 cursor-pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), \" \", opt.value, \" \"]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 74\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 27\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dropdown, \"T2gOWx/Ct75ufAqEwV717+uSPSA=\");\n\n_c = Dropdown;\n\nconst DropDownContainer = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-screen flex justify-center items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 h-16  text-black-100 flex items-center justify-center text-xl\",\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 14\n  }, this);\n};\n\n_c2 = DropDownContainer;\nexport default DropDownContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Dropdown\");\n$RefreshReg$(_c2, \"DropDownContainer\");","map":{"version":3,"sources":["/Users/cx/Desktop/NYU/Prep_Interview/Frontend/dropdown-menu/src/components/dropdown/Dropdown.js"],"names":["React","useEffect","useState","options","Dropdown","processed_opts","setProcessed_opts","expanded","setExpanded","selections","setSelections","tmp_data","map","item","tmp_obj","isChecked","toggleExpanded","handleChange","event","target","checked","name","filtered","filter","length","i","opt","idx","value","DropDownContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,gBAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAKA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,EAApD;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIU,QAAQ,GAAGR,OAAO,CAACS,GAAR,CAAYC,IAAI,IAAI;AAC/B,UAAIC,OAAO,GAAGD,IAAd;AACAC,MAAAA,OAAO,CAACC,SAAR,GAAoB,KAApB;AACA,aAAOD,OAAP;AACH,KAJc,CAAf;AAKAR,IAAAA,iBAAiB,CAACK,QAAD,CAAjB;AACH,GARQ,EAQN,EARM,CAAT;;AAYA,QAAMK,cAAc,GAAG,MAAM;AACzB,QAAI,CAACT,QAAL,EAAe;AACXC,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAFD,MAEO;AACHA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AACJ,GAND;;AAQA,QAAMS,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAIA,KAAK,CAACC,MAAN,CAAaC,OAAjB,EAA0B;AACtB,aAAOV,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBS,KAAK,CAACC,MAAN,CAAaE,IAA7B,CAAD,CAApB;AACH;;AACD,UAAMC,QAAQ,GAAGb,UAAU,CAACc,MAAX,CAAkBF,IAAI,IAAIA,IAAI,KAAKH,KAAK,CAACC,MAAN,CAAaE,IAAhD,CAAjB;AACA,WAAOX,aAAa,CAACY,QAAD,CAApB;AACH,GAND;;AASA,sBAEI;AACK,IAAA,SAAS,EAAG,WADjB;AAAA,4BAEA;AACI,MAAA,SAAS,EAAG,gBADhB;AAEA,MAAA,OAAO,EAAKN,cAFZ;AAAA,8BAGA;AACI,QAAA,SAAS,EAAM,oCAAmCT,QAAQ,GAAG,UAAH,GAAgB,YAC7D,GAFjB;AAAA,mBAIIE,UAAU,CAACe,MAAX,GACAf,UAAU,CAACG,GAAX,CAAe,CAACS,IAAD,EAAOI,CAAP,kBAAe;AAAA,0BACLA,CAAC,GAAG,IAAH,GAAU,IADN,OACeJ,IADf;AAAA,WACbI,CADa;AAAA;AAAA;AAAA;AAAA,gBAA9B,CADA,GAKI,eATR;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,OAkBIlB,QAAQ,iBAAM;AACN,MAAA,SAAS,EAAG,sDADN;AAAA,sBAENF,cAAc,IAAIA,cAAc,CAACO,GAAf,CAAmB,CAACc,GAAD,EAAMC,GAAN,kBAAgB;AAC3C,QAAA,OAAO,EAAG,KADiC;AAEjD,QAAA,SAAS,EAAG,OAFqC;AAAA,gCAIjD;AACM,UAAA,IAAI,EAAG,UADb;AAEA,UAAA,IAAI,EAAKD,GAAG,CAACE,KAFb;AAGA,UAAA,KAAK,EAAKF,GAAG,CAACE,KAHd;AAIA,UAAA,QAAQ,EAAKX,YAJb;AAKA,UAAA,SAAS,EAAG;AALZ;AAAA;AAAA;AAAA;AAAA,gBAJiD,OAU7CS,GAAG,CAACE,KAVyC;AAAA,SAGzCD,GAHyC;AAAA;AAAA;AAAA;AAAA,cAAnC,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBlB;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAyCH,CA7ED;;GAAMvB,Q;;KAAAA,Q;;AA+EN,MAAMyB,iBAAiB,GAAG,MAAM;AAC5B,sBAAS;AACD,IAAA,SAAS,EAAG,kDADX;AAAA,4BAEL;AACI,MAAA,SAAS,EAAG,qEADhB;AAAA,6BAEA,QACA,QADA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YAFK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAUH,CAXD;;MAAMA,iB;AAaN,eAAeA,iBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Dropdown.css\";\nimport options from '../options/Options'\n\n\n\n\nconst Dropdown = () => {\n    /* mini version = redux, fn comopnent feature */\n    const [processed_opts, setProcessed_opts] = useState()\n    const [expanded, setExpanded] = useState(false);\n    const [selections, setSelections] = useState([]);\n\n\n    useEffect(() => {\n        /* map || reduce fn to add a checked field for multiple selections */\n        let tmp_data = options.map(item => {\n            let tmp_obj = item\n            tmp_obj.isChecked = false\n            return tmp_obj\n        })\n        setProcessed_opts(tmp_data)\n    }, [])\n\n\n\n    const toggleExpanded = () => {\n        if (!expanded) {\n            setExpanded(true);\n        } else {\n            setExpanded(false);\n        }\n    };\n\n    const handleChange = event => {\n        if (event.target.checked) {\n            return setSelections([...selections, event.target.name]);\n        }\n        const filtered = selections.filter(name => name !== event.target.name);\n        return setSelections(filtered);\n    };\n\n\n    return (\n\n        <\n        main className = \"main__div\" >\n        <\n        div className = \"searchbar__div\"\n        onClick = { toggleExpanded } >\n        <\n        div className = { `font - semibold cursor - pointer ${expanded ? \"up-arrow\" : \"down-arrow\"\n                        } ` } >\n        {\n            selections.length ?\n            selections.map((name, i) => ( <\n                span key = { i } > { i ? \", \" : null } { name } <\n                /span>\n            )) :\n                \"None selected\"\n        } <\n        /div> <\n        /div> {\n            expanded && ( <\n                div className = \"border-gray-200 border border-solid expanded__labels\" > {\n                    processed_opts && processed_opts.map((opt, idx) => ( <\n                        label htmlFor = \"one\"\n                        className = \"block\"\n                        key = { idx } >\n                        <\n                        input type = \"checkbox\"\n                        name = { opt.value }\n                        value = { opt.value }\n                        onChange = { handleChange }\n                        className = \"m-3 cursor-pointer\" /\n                        > { opt.value } <\n                        /label>\n                    ))\n                } <\n                /div>\n            )\n        } <\n        /main>\n    );\n};\n\nconst DropDownContainer = () => {\n    return ( <\n        div className = \"w-full h-screen flex justify-center items-center\" >\n        <\n        div className = \"w-1/2 h-16  text-black-100 flex items-center justify-center text-xl\" >\n        <\n        Dropdown / >\n        <\n        /div> <\n        /div>\n    );\n};\n\nexport default DropDownContainer;"]},"metadata":{},"sourceType":"module"}